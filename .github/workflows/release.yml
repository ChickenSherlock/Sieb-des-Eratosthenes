name: Build and Publish

on:
  push:
    branches:
      - master

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    env:
      PKG_CONFIG_ALLOW_CROSS: 1
      PKG_CONFIG_PATH: /usr/x86_64-w64-mingw32/lib/pkgconfig
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Install Rust components for Windows
        run: |
          rustup component add rust-src
          rustup target add x86_64-pc-windows-gnu
          rustup toolchain install stable-gnu

      - name: Install GCC for Windows
        run: sudo apt-get install -y mingw-w64

      - name: Install Gtk (Windows only)
        uses: msys2/setup-msys2@v2
        with:
          path-type: inherit
          update: true
          install: >-
            mingw64/mingw-w64-x86_64-gtk3
            mingw64/mingw-w64-x86_64-pkg-config
            mingw64/mingw-w64-x86_64-winpthreads-git
            msys/make

      - name: Setup Rust for Windows
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable-gnu

      - name: Install GTK3 dependencies for Windows
        run: sudo apt-get install -y mingw-w64
        
      - name: Install GTK3 for Windows
        run: sudo apt-get install -y libgtk-3-dev

      
      - name: Install GDK3 for Windows
        run: sudo apt-get install -y mingw-w64-tools mingw-w64-x86-64-dev
      - name: install more
        run: sudo apt-get install libgtk-3-dev libgdk-pixbuf2.0-dev libcairo2-dev libpango1.0-dev libharfbuzz-dev libatk1.0-dev
      - name: Build for Windows
        run: cargo build --release --target=x86_64-pc-windows-gnu

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this release:
            - Built for Windows
          draft: false
          prerelease: false

      - name: Upload Windows binary
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/x86_64-pc-windows-gnu/release/test.exe
          asset_name: test.exe
          asset_content_type: application/octet-stream
